name: code-quality

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  phpstan:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      COMPOSER_NO_INTERACTION: 1
    strategy:
      matrix:
        php: [8.2]
        laravel: [12.*]
        include:
          - laravel: 12.*
            testbench: 10.*

    name: PHPStan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      - name: Install dependencies
        run: |
          composer require "illuminate/console:${{ matrix.laravel }}" "illuminate/database:${{ matrix.laravel }}" "illuminate/filesystem:${{ matrix.laravel }}" --no-update
          composer require "orchestra/testbench:${{ matrix.testbench }}" --dev --no-update
          composer update --prefer-dist --no-suggest

      - name: Execute PHPStan
        run: vendor/bin/phpstan analyse

  test-and-analyze:
    name: Test & Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: xdebug
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress

      - name: Run PHPUnit with coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.clover

      - name: Trigger Scrutinizer analysis
        run: |
          wget https://scrutinizer-ci.com/ocular.phar
          php ocular.phar code-coverage:upload --format=php-clover coverage.clover
        continue-on-error: true 